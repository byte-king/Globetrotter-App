.container {
  min-height: 100vh;
  padding: 2rem;
  background-color: #f8f9fa;
  background-image: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
}

.header {
  max-width: 1200px;
  margin: 0 auto 2rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.header h1 {
  font-size: 2.5rem;
  margin: 0;
  background: linear-gradient(45deg, #2196F3, #00BCD4);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.headerButtons {
  display: flex;
  gap: 1rem;
  align-items: center;
}

.homeButton {
  padding: 0.75rem 1.5rem;
  background-color: #fff;
  border: 2px solid #2196F3;
  border-radius: 8px;
  color: #2196F3;
  text-decoration: none;
  font-weight: 600;
  transition: all 0.3s ease;
}

.homeButton:hover {
  background-color: #2196F3;
  color: #fff;
}

.content {
  background: white;
  padding: 2.5rem;
  border-radius: 16px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

.welcomeCard {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  padding: 2rem;
  border-radius: 12px;
  color: white;
  text-align: center;
  margin-bottom: 2.5rem;
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.welcomeCard::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%);
  pointer-events: none;
}

.welcomeCard h2 {
  font-size: 2rem;
  margin: 0 0 0.5rem;
}

.welcomeCard p {
  font-size: 1.1rem;
  opacity: 0.9;
  margin: 0;
}

.rankInfo {
  margin-top: 1rem;
}

.rankBadge {
  display: inline-block;
  padding: 0.5rem 1rem;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 20px;
  font-size: 1.1rem;
  font-weight: 600;
  backdrop-filter: blur(5px);
}

.statsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 1.5rem;
  margin-bottom: 3rem;
}

.statCard {
  background: #ffffff;
  padding: 1.5rem;
  border-radius: 12px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  display: flex;
  align-items: center;
  gap: 1rem;
  transition: all 0.3s ease;
  border: 1px solid #e9ecef;
}

.statCard:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.statIcon {
  font-size: 2rem;
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #f8f9fa;
  border-radius: 12px;
}

.statInfo {
  flex: 1;
}

.statInfo h3 {
  color: #4a5568;
  margin: 0 0 0.5rem;
  font-size: 0.9rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.statInfo p {
  color: #2d3748;
  font-size: 1.8rem;
  font-weight: 700;
  margin: 0;
}

.statCard[data-type="score"] .statInfo p {
  color: #2196F3;
}

.statCard[data-type="streak"] .statInfo p {
  color: #f6ad55;
}

.statCard[data-type="current"] .statInfo p {
  color: #48bb78;
}

.statCard[data-type="average"] .statInfo p {
  color: #805ad5;
}

.statCard[data-type="games"] .statInfo p {
  color: #4299e1;
}

.statCard[data-type="winrate"] .statInfo p {
  color: #ed64a6;
}

.recentActivity {
  background: #ffffff;
  padding: 2rem;
  border-radius: 12px;
  margin-bottom: 2.5rem;
  border: 1px solid #e9ecef;
}

.recentActivity h2 {
  color: #2d3748;
  margin: 0 0 1.5rem;
  font-size: 1.5rem;
}

.recentScores {
  display: grid;
  gap: 1rem;
}

.scoreCard {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  background: #f8f9fa;
  border-radius: 8px;
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
}

.scoreCard:hover {
  background: #edf2f7;
}

.scoreInfo {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.scoreValue {
  font-size: 1.2rem;
  font-weight: 600;
  color: #2d3748;
}

.scoreDifficulty {
  padding: 0.3rem 0.8rem;
  border-radius: 20px;
  font-size: 0.8rem;
  font-weight: 600;
  text-transform: uppercase;
}

.scoreDifficulty[data-difficulty="easy"] {
  background-color: #c6f6d5;
  color: #2f855a;
}

.scoreDifficulty[data-difficulty="medium"] {
  background-color: #feebc8;
  color: #c05621;
}

.scoreDifficulty[data-difficulty="hard"] {
  background-color: #fed7d7;
  color: #c53030;
}

.scoreDifficulty[data-difficulty="brutal"] {
  background-color: #e9d8fd;
  color: #6b46c1;
}

.scoreDate {
  color: #718096;
  font-size: 0.9rem;
}

.noScores {
  text-align: center;
  color: #718096;
  padding: 2rem;
  background: #f8f9fa;
  border-radius: 8px;
  margin: 0;
}

.actions {
  display: flex;
  gap: 1rem;
  justify-content: center;
}

.playButton,
.leaderboardButton {
  padding: 1rem 2rem;
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 600;
  text-align: center;
  transition: all 0.3s ease;
  text-decoration: none;
}

.playButton {
  background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
  color: white;
  border: none;
  cursor: pointer;
}

.leaderboardButton {
  background: #fff;
  color: #2d3748;
  border: 2px solid #e2e8f0;
}

.playButton:hover,
.leaderboardButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.loading {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 60vh;
  gap: 1rem;
}

.spinner {
  width: 40px;
  height: 40px;
  border: 4px solid #f3f3f3;
  border-top: 4px solid #2196F3;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.loading p {
  color: #4a5568;
  font-size: 1.1rem;
  margin: 0;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@media (max-width: 768px) {
  .container {
    padding: 1rem;
  }

  .header {
    flex-direction: column;
    gap: 1rem;
    text-align: center;
  }

  .header h1 {
    font-size: 2rem;
  }

  .content {
    padding: 1.5rem;
  }

  .statsGrid {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  }

  .statInfo p {
    font-size: 1.5rem;
  }

  .actions {
    flex-direction: column;
  }

  .playButton,
  .leaderboardButton {
    width: 100%;
  }
}

.difficultyStats {
  background: #ffffff;
  padding: 2rem;
  border-radius: 12px;
  margin-bottom: 2.5rem;
  border: 1px solid #e9ecef;
}

.difficultyStats h2 {
  color: #2d3748;
  margin: 0 0 1.5rem;
  font-size: 1.5rem;
}

.difficultyGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
}

.difficultyCard {
  padding: 1.5rem;
  border-radius: 8px;
  background: #f8f9fa;
  transition: all 0.2s ease;
}

.difficultyCard:hover {
  transform: translateY(-2px);
}

.difficultyCard h3 {
  margin: 0 0 0.5rem;
  font-size: 1.1rem;
  color: #2d3748;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.difficultyCard p {
  margin: 0 0 1rem;
  font-size: 1.2rem;
  font-weight: 600;
  color: #4a5568;
}

.difficultyCard[data-difficulty="easy"] h3::before {
  content: "ðŸŸ¢";
}

.difficultyCard[data-difficulty="medium"] h3::before {
  content: "ðŸŸ¡";
}

.difficultyCard[data-difficulty="hard"] h3::before {
  content: "ðŸŸ ";
}

.difficultyCard[data-difficulty="brutal"] h3::before {
  content: "ðŸ”´";
}

.progressBar {
  height: 8px;
  background: #e2e8f0;
  border-radius: 4px;
  overflow: hidden;
}

.progress {
  height: 100%;
  transition: width 0.3s ease;
}

.difficultyCard[data-difficulty="easy"] .progress {
  background: #48bb78;
}

.difficultyCard[data-difficulty="medium"] .progress {
  background: #f6ad55;
}

.difficultyCard[data-difficulty="hard"] .progress {
  background: #f56565;
}

.difficultyCard[data-difficulty="brutal"] .progress {
  background: #805ad5;
}

.scoreCard[data-win="true"] {
  background: linear-gradient(to right, #f0fff4, #f8f9fa);
  border-left: 4px solid #48bb78;
}

.scoreCard[data-win="false"] {
  background: linear-gradient(to right, #fff5f5, #f8f9fa);
  border-left: 4px solid #f56565;
}

.scoreResult {
  font-size: 0.9rem;
  font-weight: 600;
  padding: 0.2rem 0.8rem;
  border-radius: 20px;
  margin-left: 0.5rem;
}

.scoreCard[data-win="true"] .scoreResult {
  background: #c6f6d5;
  color: #2f855a;
}

.scoreCard[data-win="false"] .scoreResult {
  background: #fed7d7;
  color: #c53030;
}

.challengeButton {
  background: rgba(255, 255, 255, 0.2);
  color: white;
  border: 2px solid rgba(255, 255, 255, 0.4);
  padding: 0.8rem 1.5rem;
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  backdrop-filter: blur(5px);
}

.challengeButton:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: translateY(-2px);
}

.shareModal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  backdrop-filter: blur(5px);
}

.shareContent {
  background: white;
  padding: 2rem;
  border-radius: 12px;
  width: 90%;
  max-width: 500px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.shareContent h3 {
  color: #2d3748;
  margin: 0 0 1rem;
  font-size: 1.5rem;
}

.shareContent p {
  color: #4a5568;
  margin-bottom: 1rem;
}

.linkBox {
  display: flex;
  gap: 0.5rem;
  margin-bottom: 1.5rem;
}

.linkBox input {
  flex: 1;
  padding: 0.8rem;
  border: 2px solid #e2e8f0;
  border-radius: 8px;
  font-size: 0.9rem;
  color: #4a5568;
}

.linkBox button {
  padding: 0.8rem 1.5rem;
  background: #4299e1;
  color: white;
  border: none;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
}

.linkBox button:hover {
  background: #3182ce;
}

.shareButtons {
  display: flex;
  gap: 1rem;
  justify-content: flex-end;
}

.shareButton,
.closeButton {
  padding: 0.8rem 1.5rem;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
}

.shareButton {
  background: #48bb78;
  color: white;
  border: none;
}

.shareButton:hover {
  background: #38a169;
  transform: translateY(-1px);
}

.closeButton {
  background: white;
  color: #4a5568;
  border: 2px solid #e2e8f0;
}

.closeButton:hover {
  background: #f7fafc;
  transform: translateY(-1px);
}

@media (max-width: 768px) {
  .shareContent {
    padding: 1.5rem;
    margin: 1rem;
  }

  .shareButtons {
    flex-direction: column;
  }

  .shareButton,
  .closeButton {
    width: 100%;
  }

  .linkBox {
    flex-direction: column;
  }

  .linkBox button {
    width: 100%;
  }
} 